// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crm.db;

namespace crm.db.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crm.db.entities.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("SName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Contact","crm");
                });

            modelBuilder.Entity("crm.db.entities.ContactHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime2");

                    b.Property<long>("ChangedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("RowData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("HistoryId");

                    b.ToTable("Contact_H","crm");
                });

            modelBuilder.Entity("crm.db.entities.GardenSociety", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("GardenSociety","crm");
                });

            modelBuilder.Entity("crm.db.entities.GardenSocietyHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime2");

                    b.Property<long>("ChangedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RowData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryId");

                    b.ToTable("GardenSociety_H","crm");
                });

            modelBuilder.Entity("crm.db.entities.Plot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("GardenSocietyId")
                        .HasColumnType("bigint");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonalAccount")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("StreetId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GardenSocietyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StreetId");

                    b.ToTable("Plot","crm");
                });

            modelBuilder.Entity("crm.db.entities.PlotHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime2");

                    b.Property<long>("ChangedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<long>("GardenSocietyId")
                        .HasColumnType("bigint");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("PersonalAccount")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RowData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StreetId")
                        .HasColumnType("bigint");

                    b.HasKey("HistoryId");

                    b.HasIndex("GardenSocietyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StreetId");

                    b.ToTable("Plot_H","crm");
                });

            modelBuilder.Entity("crm.db.entities.Settings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<long>("Kind")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Settings","crm");
                });

            modelBuilder.Entity("crm.db.entities.Street", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GardenSocietyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("GardenSocietyId");

                    b.ToTable("Street","crm");
                });

            modelBuilder.Entity("crm.db.entities.TimeSheet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CounterReading")
                        .HasColumnType("bigint");

                    b.Property<int>("Direct")
                        .HasColumnType("int");

                    b.Property<long>("PlotId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SettingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TSDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Target")
                        .HasColumnType("bigint");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.HasIndex("SettingId");

                    b.ToTable("TimeSheet","crm");
                });

            modelBuilder.Entity("crm.db.entities.TimeSheetHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Changed")
                        .HasColumnType("datetime2");

                    b.Property<long>("ChangedUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("CounterReading")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("Direct")
                        .HasColumnType("int");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("PlotId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RowData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SettingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TSDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Target")
                        .HasColumnType("bigint");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("HistoryId");

                    b.HasIndex("PlotId");

                    b.HasIndex("SettingId");

                    b.ToTable("TimeSheet_H","crm");
                });

            modelBuilder.Entity("crm.db.entities.Plot", b =>
                {
                    b.HasOne("crm.db.entities.GardenSociety", "GardenSociety")
                        .WithMany()
                        .HasForeignKey("GardenSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Contact", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Street", "Street")
                        .WithMany()
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("crm.db.entities.PlotHistory", b =>
                {
                    b.HasOne("crm.db.entities.GardenSociety", "GardenSociety")
                        .WithMany()
                        .HasForeignKey("GardenSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Contact", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Street", "Street")
                        .WithMany()
                        .HasForeignKey("StreetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("crm.db.entities.Street", b =>
                {
                    b.HasOne("crm.db.entities.GardenSociety", "GardenSociety")
                        .WithMany()
                        .HasForeignKey("GardenSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("crm.db.entities.TimeSheet", b =>
                {
                    b.HasOne("crm.db.entities.Plot", "Plot")
                        .WithMany()
                        .HasForeignKey("PlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("crm.db.entities.TimeSheetHistory", b =>
                {
                    b.HasOne("crm.db.entities.Plot", "Plot")
                        .WithMany()
                        .HasForeignKey("PlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("crm.db.entities.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
